@app.route('/createUser', methods=['POST'])
def create_user():
    try:        
        _json = request.json
        _usuario = _json['usuario']
        _password = _json['password']
        

        if request.method == 'POST':
            conn = mysql.connect()
            cursor = conn.cursor(pymysql.cursors.DictCursor)		
            sqlQuery = "INSERT INTO usuario(usuario, password) VALUES(%s, %s)"
            bindData = (_usuario, _password)            
            cursor.execute(sqlQuery, bindData)
            #cursor.execute("INSERT INTO paciente(entNacimiento, curp, sexo, talla, domicilio, telefono, spss, fechaNac) VALUES(2, 2, 2, 2, 2, 2, 2, 2023-1-1)")
            conn.commit()
            respone = jsonify('Employee added successfully!')
            respone.status_code = 200
            return respone
        else:
            return showMessage()
    except Exception as e:
        print(e)
    finally:
        cursor.close() 
        conn.close()          
     

@app.route('/createP', methods=['POST'])
def create_paciente():
    try:        
        _entidadNac = request.form['entidad']
        _curp = request.form['curp']
        _sexo = request.form['sexo']
        _talla = request.form['talla']	
        _domicilio = request.form['domicilio']
        _telefono = request.form['telefono']
        _fechaNac = request.form['fechaNac']
        if request.method == 'POST':
            conn = mysql.connect()
            cursor = conn.cursor(pymysql.cursors.DictCursor)		
            sqlQuery = "INSERT INTO paciente(entNacimiento, curp, sexo, talla, domicilio, telefono, fechaNac) VALUES(%s, %s, %s, %s, %s, %s, %s)"
            bindData = (_entidadNac, _curp, _sexo, _talla, _domicilio, _telefono,  _fechaNac)            
            cursor.execute(sqlQuery, bindData)
            conn.commit()
            return redirect('/tasks')
        else:
            return showMessage()
    except Exception as e:
        print(e)

        
@app.route('/createDiagno', methods=['POST'])
def diagnostico_paciente():
    try:
        _ingreso = request.form['ingreso-reingreso']
        _dm = request.form['tipo-dm']
        _hta = request.form.get('hta')
        _obesidad = request.form.get('obesidad')
        _dis = request.form.get('dislipidemias')
        _sindromeMetabolico = request.form.get('metabolico')
        _sobrepeso = request.form.get('sobrepeso')
        _deteccion = request.form['deteccion']
        _tratamientoPrevio = request.form['tratamiento']
        _covid = request.form['covid']
        conn = mysql.connect()
        cursor = conn.cursor(pymysql.cursors.DictCursor)
        sqlQuery = "INSERT INTO diagnostico(ingreso, dm, hta, obesidad, dis, sindromeMetabolico, sobrepeso, deteccion, tratamientoPrevio, covid) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
        bindData = (_ingreso, _dm, _hta, _obesidad, _dis, _sindromeMetabolico, _sobrepeso, _deteccion, _tratamientoPrevio, _covid)
        cursor.execute(sqlQuery, bindData)
        conn.commit()
        response = jsonify('Diagnóstico registrado con éxito')
        response.status_code = 200
        return response
    except Exception as e:
        print(e)
    finally:
        cursor.close() 
        conn.close()

@app.route('/createAnt', methods=['POST'])
def create_antecedentes():
    try:        
        _familiares =''.join(request.form.getlist('familiares[]')) 
        _personales =''.join(request.form.getlist('personales[]')) 
        if request.method == 'POST':
            
            conn = mysql.connect()
            cursor = conn.cursor(pymysql.cursors.DictCursor)		
            cursor.execute("INSERT INTO antecedentesfamiliares(mapaAntecedentesFamiliares) VALUES(%s) ", _familiares)
            cursor.execute(" INSERT INTO antecedentespersonales(mapaAntecedentesPersonales) VALUES(%s)", _personales)
            conn.commit()
            respone = jsonify('Employee added successfully!')
            respone.status_code = 200
            return respone
        else:
            return showMessage()
    except Exception as e:
        print(e)
    finally:
        cursor.close() 
        conn.close() 

@app.route('/createidAnt', methods=['POST'])
def create_id_ant():
    try:        
        _entidadNac = request.form['entidad']
        _curp = request.form['curp']
        _sexo = request.form['sexo']
        _talla = request.form['talla']	
        _domicilio = request.form['domicilio']
        _telefono = request.form['telefono']
        _fechaNac = request.form['fechaNac']
        _familiares =''.join(request.form.getlist('familiares[]')) 
        _personales =''.join(request.form.getlist('personales[]')) 
        if request.method == 'POST':
            
            conn = mysql.connect()
            cursor = conn.cursor(pymysql.cursors.DictCursor)	
            sqlQuery = "INSERT INTO paciente(entNacimiento, curp, sexo, talla, domicilio, telefono, fechaNac) VALUES(%s, %s, %s, %s, %s, %s, %s)"
            bindData = (_entidadNac, _curp, _sexo, _talla, _domicilio, _telefono,  _fechaNac)            
            cursor.execute(sqlQuery, bindData)	
            cursor.execute("INSERT INTO antecedentesfamiliares(mapaAntecedentesFamiliares) VALUES(%s) ", _familiares)
            cursor.execute(" INSERT INTO antecedentespersonales(mapaAntecedentesPersonales) VALUES(%s)", _personales)
            conn.commit()
            respone = jsonify('Paciente agregado')
            respone.status_code = 200
            return respone
        else:
            return showMessage()
    except Exception as e:
        print(e)
    finally:
        cursor.close() 
        conn.close() 
